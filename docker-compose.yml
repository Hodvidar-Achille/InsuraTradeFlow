services:
  mysql:
    image: mysql:8.0
    container_name: insuratradeflow-mysql-v1
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: InsuraTradeFlow
      MYSQL_USER: InsuraTradeFlowUser
      MYSQL_PASSWORD: InsuraTradeFlowPassword
      MYSQL_ROOT_HOST: '%'
    command:
      - --init-file=/docker-entrypoint-initdb.d/init-keycloak.sql
    volumes:
      - ./init-keycloak.sql:/docker-entrypoint-initdb.d/init-keycloak.sql
      - ./src/main/resources/db/changelog:/docker-entrypoint-initdb.d/changelog
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD | grep 'mysqld is alive'" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: insuratradeflow-keycloak-1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: turtle
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HOSTNAME_URL: "http://localhost:8181"
      KC_PROXY: "edge"
    command:
      - start-dev
      - --import-realm
    ports:
      - "8181:8080"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./keycloak_realm.json:/opt/keycloak/data/import/realm.json

  app:
    networks:
      - app-network
    hostname: app
    build: .
    container_name: insuratradeflow-app-v1
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    depends_on:
      mysql:
        condition: service_healthy
      keycloak:
        condition: service_started # Less strict than service_healthy
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/InsuraTradeFlow
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/InsuraTradeFlow/protocol/openid-connect/certs
      - DATABASE_URL=jdbc:mysql://mysql:3306/InsuraTradeFlow
      - DATABASE_USER=InsuraTradeFlowUser
      - DATABASE_PASSWORD=InsuraTradeFlowPassword
      - SPRING_PROFILES_ACTIVE=docker,keycloak
    restart: on-failure

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://app:8080
      - REACT_APP_KEYCLOAK_URL=http://keycloak:8080
      - REACT_APP_KEYCLOAK_REALM=InsuraTradeFlow
      - REACT_APP_KEYCLOAK_CLIENT_ID=insuratrade-frontend
    depends_on:
      mysql:
        condition: service_healthy
      keycloak:
        condition: service_started
      app:
       condition: service_started

networks:
  app-network:
    driver: bridge